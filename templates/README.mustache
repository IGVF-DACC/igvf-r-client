# IGVF API R client

The R client is autogenerated based on this [IGVF OpenAPI specification](https://github.com/IGVF-DACC/igvf-client-openapi-spec/blob/main/openapi_spec.json). It exposes search and collection endpoints from [https://api.data.igvf.org](https://api.data.igvf.org).

- API version: {{appVersion}}
- Package version: {{packageVersion}}
{{^hideGenerationTimestamp}}
- Build date: {{generatedDate}}
{{/hideGenerationTimestamp}}
- Generator version: {{generatorVersion}}
- Build package: {{generatorClass}}
{{#infoUrl}}
For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

## Installation

### Prerequisites

Install the dependencies

```R
install.packages("jsonlite")
install.packages("httr")
install.packages("base64enc")
```

### Install the package


To install directly from Github, use `remotes`:
```R
install.packages("remotes")
library(remotes)
install_github("{{{gitUserId}}}/{{{gitRepoId}}}@v{{{packageVersion}}}")
```

Or clone the repo and build:
```sh
git clone https://{{gitHost}}/{{{gitUserId}}}/{{{gitRepoId}}}
cd {{{gitRepoId}}}
R CMD build .
R CMD check {{{packageName}}}_{{{packageVersion}}}.tar.gz --no-manual
R CMD INSTALL --preclean {{{packageName}}}_{{{packageVersion}}}.tar.gz
```

To install the package from a local file:
```R
install.packages("{{{packageName}}}_{{{packageVersion}}}.tar.gz", repos = NULL, type = "source")
```

### Examples

```R
library("igvfclient")
api <- IgvfApi$new()
r <- api$Search(query="abc", frame="object", type=list("Software"))
print(r$total)
print(r$`@graph`)
software_item <- r$`@graph`[[1]]$actual_instance
print(software_item)
print(software_item$`@id`)
print(software_item$description)
lab <- api$GetById(software_item$lab, frame="object")
print(lab)
print(lab$title)
```

See other examples in [Jupyter notebook](examples.ipynb) (tests)[https://github.com/IGVF-DACC/igvf-r-client/blob/main/tests/test_endpoints.R].

## Documentation for API Endpoints

All URIs are relative to *{{basePath}}*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{classname}}* | [**{{operationId}}**]({{apiDocPath}}{{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{{summary}}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation for Models

{{#models}}{{#model}} - [{{classname}}]({{modelDocPath}}{{classname}}.md)
{{/model}}{{/models}}

## Documentation for Authorization

{{^authMethods}}Endpoints do not require authorization.{{/authMethods}}
{{#hasAuthMethods}}Authentication schemes defined for the API:{{/hasAuthMethods}}
{{#authMethods}}
### {{name}}

{{#isApiKey}}
- **Type**: API key
- **API key parameter name**: {{keyParamName}}
- **Location**: {{#isKeyInQuery}}URL query string{{/isKeyInQuery}}{{#isKeyInHeader}}HTTP header{{/isKeyInHeader}}
{{/isApiKey}}
{{#isBasic}}
{{#isHttpSignature}}
- **Type**: HTTP signature authentication
{{/isHttpSignature}}
{{#isBasicBasic}}
- **Type**: HTTP basic authentication
{{/isBasicBasic}}
{{#isBasicBearer}}
- **Type**: Bearer authentication
{{#bearerFormat}}
- **Bearer Format**: {{{.}}}
{{/bearerFormat}}
{{/isBasicBearer}}
{{/isBasic}}
{{#isOAuth}}
- **Type**: OAuth
- **Flow**: {{flow}}
{{#authorizationUrl}}
- **Authorization URL**: {{authorizationUrl}}
{{/authorizationUrl}}
{{#tokenUrl}}
- **Token URL**: {{tokenUrl}}
{{/tokenUrl}}
{{#refreshUrl}}
- **Refresh URL**: {{refreshUrl}}
{{/refreshUrl}}
- **Scopes**: {{^scopes}}N/A{{/scopes}}
{{#scopes}}  - `{{scope}}`: {{description}}
{{/scopes}}
{{/isOAuth}}

{{/authMethods}}

{{#apiInfo}}
{{#apis}}
{{#-last}}
{{#infoEmail}}
## Author

{{{infoEmail}}}
{{/infoEmail}}
{{/-last}}
{{/apis}}
{{/apiInfo}}
