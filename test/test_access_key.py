# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate

context("Test AccessKey")

model_instance <- AccessKey$new()

test_that("schema_version", {
  # tests for the property `schema_version` (str)
  # The version of the JSON schema that the server uses to validate the object.

  # uncomment below to test the property
  #expect_equal(model.instance$`schema_version`, "EXPECTED_RESULT")
})

test_that("uuid", {
  # tests for the property `uuid` (str)
  # The unique identifier associated with every object.

  # uncomment below to test the property
  #expect_equal(model.instance$`uuid`, "EXPECTED_RESULT")
})

test_that("notes", {
  # tests for the property `notes` (str)
  # DACC internal notes.

  # uncomment below to test the property
  #expect_equal(model.instance$`notes`, "EXPECTED_RESULT")
})

test_that("aliases", {
  # tests for the property `aliases` (List[str])
  # Lab specific identifiers to reference an object.

  # uncomment below to test the property
  #expect_equal(model.instance$`aliases`, "EXPECTED_RESULT")
})

test_that("creation_timestamp", {
  # tests for the property `creation_timestamp` (str)
  # The date the object was created.

  # uncomment below to test the property
  #expect_equal(model.instance$`creation_timestamp`, "EXPECTED_RESULT")
})

test_that("submitted_by", {
  # tests for the property `submitted_by` (str)
  # The user who submitted the object.

  # uncomment below to test the property
  #expect_equal(model.instance$`submitted_by`, "EXPECTED_RESULT")
})

test_that("submitter_comment", {
  # tests for the property `submitter_comment` (str)
  # Additional information specified by the submitter to be displayed as a comment on the portal.

  # uncomment below to test the property
  #expect_equal(model.instance$`submitter_comment`, "EXPECTED_RESULT")
})

test_that("description", {
  # tests for the property `description` (str)
  # Description of the access key.

  # uncomment below to test the property
  #expect_equal(model.instance$`description`, "EXPECTED_RESULT")
})

test_that("status", {
  # tests for the property `status` (str)

  # uncomment below to test the property
  #expect_equal(model.instance$`status`, "EXPECTED_RESULT")
})

test_that("user", {
  # tests for the property `user` (str)
  # The user that is assigned to this access key.

  # uncomment below to test the property
  #expect_equal(model.instance$`user`, "EXPECTED_RESULT")
})

test_that("access_key_id", {
  # tests for the property `access_key_id` (str)
  # An access key.

  # uncomment below to test the property
  #expect_equal(model.instance$`access_key_id`, "EXPECTED_RESULT")
})

test_that("secret_access_key_hash", {
  # tests for the property `secret_access_key_hash` (str)
  # A secret access key.

  # uncomment below to test the property
  #expect_equal(model.instance$`secret_access_key_hash`, "EXPECTED_RESULT")
})

test_that("id", {
  # tests for the property `id` (str)

  # uncomment below to test the property
  #expect_equal(model.instance$`id`, "EXPECTED_RESULT")
})

test_that("type", {
  # tests for the property `type` (List[str])

  # uncomment below to test the property
  #expect_equal(model.instance$`type`, "EXPECTED_RESULT")
})

test_that("summary", {
  # tests for the property `summary` (str)
  # A summary of the object.

  # uncomment below to test the property
  #expect_equal(model.instance$`summary`, "EXPECTED_RESULT")
})
